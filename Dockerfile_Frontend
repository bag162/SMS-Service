#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY ["Client/Client.csproj", "Client/"]
COPY ["Client.gRPC/Client.gRPC.csproj", "Client.gRPC/"]
COPY ["Client.Configuration/Client.Configuration.csproj", "Client.Configuration/"]
COPY ["Backend.Models.DTO/Backend.Models.csproj", "Backend.Models.DTO/"]
COPY ["Client.Service/Client.Service.csproj", "Client.Service/"]
COPY ["Client.Models/Client.Models.csproj", "Client.Models/"]
COPY ["Client.DBInfrastructure/Client.DBInfrastructure.csproj", "Client.DBInfrastructure/"]
COPY ["Client.DBMigrations/Client.DBMigrations.csproj", "Client.DBMigrations/"]
RUN dotnet restore "Client/Client.csproj"
COPY . .

WORKDIR /
RUN apt update
RUN apt install -y nodejs
RUN apt install -y npm
RUN npm install -g @angular/cli

WORKDIR "/src/Client/ClientApp"
RUN npm install -g n /
RUN n 0.9

WORKDIR "/src/Client"
RUN dotnet build "Client.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "Client.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Client.dll"]