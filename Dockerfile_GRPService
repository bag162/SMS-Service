FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 6520

FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY ["GrpcService/GrpcService.csproj", "GrpcService/"]
COPY ["Backend.Configuration/Backend.Configuration.csproj", "Backend.Configuration/"]
COPY ["Client.gRPC/Client.gRPC.csproj", "Client.gRPC/"]
COPY ["Client.Configuration/Client.Configuration.csproj", "Client.Configuration/"]
COPY ["Backend.Models.DTO/Backend.Models.csproj", "Backend.Models.DTO/"]
COPY ["Backend.Implemantation/Backend.Implemantation.csproj", "Backend.Implemantation/"]
COPY ["Backend.TarantoolDB/Backend.TarantoolDB.csproj", "Backend.TarantoolDB/"]
COPY ["Backend.DBInfrastructure/Backend.DBInfrastructure.csproj", "Backend.DBInfrastructure/"]
COPY ["Backend.DI/Backend.DI.csproj", "Backend.DI/"]
COPY ["Backend.CheckDBWorkers/Backend.CheckDBWorkers.csproj", "Backend.CheckDBWorkers/"]
COPY ["Backend.SMSWorker/Backend.SMSWorker.csproj", "Backend.SMSWorker/"]
RUN dotnet restore "GrpcService/GrpcService.csproj"
COPY . .

# WORKDIR /
# RUN mkdir -p /home/.pki/nssdb
# RUN apt update
# RUN apt install libssl-dev
# RUN apt install -y libnss3-tools
# RUN dotnet dev-certs https -ep /src/GrpcService/server1.crt --format PEM
# RUN update-ca-certificates
# # RUN dotnet dev-certs https --trust
# RUN certutil -d sql:/home/.pki/nssdb -A -t "P,," -n localhost -i /src/GrpcService/server1.crt
# RUN certutil -d sql:/home/.pki/nssdb -A -t "C,," -n localhost -i /src/GrpcService/server1.crt

WORKDIR "/src/GrpcService"
RUN dotnet build "GrpcService.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "GrpcService.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

WORKDIR "/src/GrpcService"
ENTRYPOINT ["dotnet", "GrpcService.dll"]